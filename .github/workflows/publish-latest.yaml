name: Publish to Docker and k8s

on:
  push:
    branches: [ "main" ]

jobs:

  tag_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.new_version }}
      version_tag: ${{ steps.semver.outputs.new_tag }}
      commit: ${{ env.GITHUB_SHA }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Bump version and push tag
      id: semver
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        create_annotated_tag: true
      
    - name: Debug Version
      continue-on-error: true
      run: |
        echo "Output of version: ${{ steps.semver.outputs.new_version }}"
        echo "Output of version_tag: ${{ steps.semver.outputs.new_tag }}"
        echo "Output of commit: ${{ env.GITHUB_SHA }}"

  # create_github_tag:
  #   needs: [tag_version]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create release entry on GitHub
  #       uses: ncipollo/release-action@v1.12.0
  #       with:
  #         prerelease: false
  #         tag: latest
  #         commit: ${{ needs.tag_version.outputs.commit }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         body: ${{ steps.tag_version.outputs.changelog }}
  #         generateReleaseNotes: true
  
  release_docker_image:
    needs: [tag_version]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Create docker driver
        run: |
          docker buildx create --use --driver=docker-container

      - name: Build and push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            dhoeppner/website:latest
            dhoeppner/website:${{ needs.tag_version.outputs.commit }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    if: github.ref == 'refs/heads/main'
    needs: [ release_docker_image ]
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_DEPLOYMENT_SECRET }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: default
          manifests: |
            k8s/deployment.yaml
            k8s/ingress.yaml
            k8s/production_issuer.yaml
          images: |
            dhoeppner/website:${{ needs.tag_version.outputs.commit }}
